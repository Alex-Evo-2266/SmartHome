{"name":"MQTT","pages":[{"name":"topics","url":"topics","page":{"type":"LIST","name":"button","value":[{"type":"PANEL","name":"button","value":{"type":"TEXT","value":"Topics","name":"text_fiald","option":{"fontSize":32,"pozition":"center"}}},{"type":"PANEL","name":"button","value":{"type":"LIST","name":"button","value":[],"src":"SERVER_GENERATE","option":{},"src_key":"40f048cc-94d7-4c9d-93e8-9532cc538a81"}}],"src":"MANUAL"}}],"api":[],"dialog":[],"menu":[],"functions":[{"key":"40f048cc-94d7-4c9d-93e8-9532cc538a81","type":"LIST","name":"button","code":"from app.internal.pages.schemas.components import ComponentType, Component\nfrom app.internal.poll.serviceDataPoll import servicesDataPoll, ObservableDict\nfrom app.configuration.settings import SERVICE_DATA_POLL\n\nMQTT_MESSAGES = \"MQTT_messages\"\n\ndef formater()->list[Component]:\n\n\tservices:ObservableDict = servicesDataPoll.get(SERVICE_DATA_POLL)\n\tservice_data = services.get(MQTT_MESSAGES)\n\t\n\treturn [Component(type=ComponentType.TEXT, name=\"test_data\", value=str(service_data))]\n"}],"devices":[]}