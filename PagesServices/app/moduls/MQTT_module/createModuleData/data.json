{"name":"MQTT","pages":[{"name":"topics","url":"topics","page":{"type":"LIST","name":"button","value":[{"type":"PANEL","name":"button","value":{"type":"TEXT","value":"Topics","name":"text_fiald","option":{"fontSize":32,"pozition":"center"}}},{"type":"GRID_LAYOUT","name":"button","value":[],"src":"SERVER_GENERATE","option":{},"src_key":"1f7d5c56-ab89-424a-a0a7-9be506ab5f69"}],"src":"MANUAL"}}],"api":[],"dialog":[{"name":"topic_data","title":"topic data"}],"menu":[],"functions":[{"key":"1f7d5c56-ab89-424a-a0a7-9be506ab5f69","type":"GRID_LAYOUT","name":"button","code":"from app.internal.pages.schemas.components import ComponentType, Component, Action, ActionType, IOption\nfrom app.internal.poll.serviceDataPoll import servicesDataPoll, ObservableDict\nfrom app.configuration.settings import SERVICE_DATA_POLL\n\nMQTT_MESSAGES = \"MQTT_messages\"\n\ndef flatten_topic_dict(nested_dict: dict, parent_key: str = '', sep: str = '/') -> dict:\n\tflat_dict = {}\n\t\n\tfor key, value in nested_dict.items():\n\t\t# Формируем новый ключ\n\t\tnew_key = f\"{parent_key}{sep}{key}\" if parent_key else key\n\t\t\n\t\tif isinstance(value, dict) and \"_value\" in value:\n\t\t\t# Если это словарь с ключом \"_value\", добавляем его в результат\n\t\t\tflat_dict[new_key] = value[\"_value\"]\n\t\t\t\n\t\t\t# Рекурсивно обходим оставшиеся ключи в этом словаре\n\t\t\tnested_flat_dict = flatten_topic_dict(value, new_key, sep)\n\t\t\tflat_dict.update(nested_flat_dict)\n\t\telif isinstance(value, dict):\n\t\t\t# Если это обычный словарь, рекурсивно обходим его\n\t\t\tnested_flat_dict = flatten_topic_dict(value, new_key, sep)\n\t\t\tflat_dict.update(nested_flat_dict)\n\t\n\treturn flat_dict\n\ndef formater()->list[Component]:\n\n\tservices:ObservableDict = servicesDataPoll.get(SERVICE_DATA_POLL)\n\tservice_data = services.get(MQTT_MESSAGES)\n\tif(not service_data):\n\t\treturn []\n\tdata = flatten_topic_dict(service_data)\n\t\n\n\tcomponents = []\n\tfor i in data:\n\t\tcomponents.append(Component(\n\t\t\ttype=ComponentType.CARD, \n\t\t\tname=i,\n\t\t\toption=IOption(width=350),\n\t\t\taction=Action(\n\t\t\t\taction_type=ActionType.DIALOG,\n\t\t\t\taction_target=\"topic_data\",\n\t\t\t\tdata=Component(type=ComponentType.JSON, name=i, value=str(data[i]))\n\t\t\t),\n\t\t\tvalue=Component(\n\t\t\t\ttype=ComponentType.TEXT, value=str(i)\n\t\t)))\n\treturn components\n\n"}],"devices":[]}