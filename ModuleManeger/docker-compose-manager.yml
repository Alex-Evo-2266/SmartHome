services:
  modules_manager:
    build: ${MENEGER_SERVICE_DIR}/server
    restart: always
    networks: 
      - local_module_manager_network
    command: bash -c "uvicorn app:create_app --reload --port=8005 --host='0.0.0.0'"
    ports:
      - 8005:8005
    labels:
      - "traefik.enable=true"

      # http (без TLS)
      - "traefik.http.routers.module_manager_http.rule=PathPrefix(`/api-modules-manager`)"
      - "traefik.http.routers.module_manager_http.entrypoints=web"
      - "traefik.http.routers.module_manager_http.service=module_manager"
      # - "traefik.http.routers.module_manager_http.middlewares=moduleauth@docker,module_manager-strip"

      # https (с TLS)
      - "traefik.http.routers.module_manager_https.rule=PathPrefix(`/api-modules-manager`)"
      - "traefik.http.routers.module_manager_https.entrypoints=websecure"
      - "traefik.http.routers.module_manager_https.tls=true"
      - "traefik.http.routers.module_manager_https.service=module_manager"
      # - "traefik.http.routers.module_manager_https.middlewares=moduleauth@docker,module_manager-strip"

      # - "traefik.http.middlewares.module_manager-strip.stripprefixregex.regex=^/modules/mqtt_page"

      # общий сервис
      - "traefik.http.services.module_manager.loadbalancer.server.port=8005"
    volumes:
      - ${MENEGER_SERVICE_DIR}/server:/home/module_manager/web
      - ${CONFIGURATE_DIR}:/home/module_manager/web/config_services
      - ${CONFIGURATE_DIR}/_managers_:/home/module_manager/web/config
      - ./modules:/home/module_manager/web/modules
      - .env:/home/module_manager/web/.env
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - CONFIGURATE_DIR=${CONFIGURATE_DIR}
    depends_on:
      rabbitmq:
        condition: service_healthy
      auth_service:
        condition: service_started

#   client_manager:
#     container_name: modules_manager_frontend
#     networks: 
#       - local_module_manager_network
#     build:
#       context: ${MENEGER_SERVICE_DIR}/frontend
#       dockerfile: Dockerfile
#     restart: always
#     # volumes:
#     #   - client_manager_voluem:/home/frontend/web
#     labels:
#       - "traefik.enable=true"
#       # http (без TLS)
#       - "traefik.http.routers.module_manager_client_http.rule=PathPrefix(`/modules-manager`)"
#       - "traefik.http.routers.module_manager_client_http.entrypoints=web"
#       - "traefik.http.routers.module_manager_client_http.service=module_manager_client"
#       - "traefik.http.routers.module_manager_client_http.middlewares=moduleauth@docker,module_manager-strip"
#       # https (с TLS)
#       - "traefik.http.routers.module_manager_client_https.rule=PathPrefix(`/modules-manager`)"
#       - "traefik.http.routers.module_manager_client_https.entrypoints=websecure"
#       - "traefik.http.routers.module_manager_client_https.tls=true"
#       - "traefik.http.routers.module_manager_client_https.service=module_manager_client"
#       - "traefik.http.routers.module_manager_client_https.middlewares=moduleauth@docker,module_manager-strip"
#       # общий сервис
#       - "traefik.http.middlewares.module_manager-strip.stripprefixregex.regex=^/modules-manager"
#       - "traefik.http.services.module_manager_client.loadbalancer.server.port=80"
#     depends_on:
#       auth_service:
#         condition: service_started

# volumes:
#   client_manager_voluem:

networks:
  local_module_manager_network:
    name: ${NETWORK_NAME}
    external: true