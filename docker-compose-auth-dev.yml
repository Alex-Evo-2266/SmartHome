version: "3.3"

services:
  sh_db:
    image: mariadb
    # image: 459below/mariadb-armv7:latest
    restart: always
    ports:
      - 3307:3306
    volumes:
      - bd_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
  sh_auth_db:
    image: mariadb
    # image: 459below/mariadb-armv7:latest
    restart: always
    ports:
      - 3308:3306
    volumes:
      - bd_auth_data:/var/lib/mysql
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_AUTH_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_AUTH_DATABASE}
      MYSQL_USER: ${MYSQL_AUTH_USER}
      MYSQL_PASSWORD: ${MYSQL_AUTH_PASSWORD}
  auth_service:
    build: ./SmartHomeAuth
    restart: always
    command: bash -c "alembic upgrade head &&
              uvicorn app:create_app --reload --port=8004 --host='0.0.0.0'"
    environment:
      SMARTHOME_AUTH_BD_HOST: ${AUTH_BD_HOST}
      SMARTHOME_AUTH_BD_PORT: ${AUTH_BD_PORT}
      SMARTHOME_AUTH_BD_NAME: ${MYSQL_AUTH_DATABASE}
      SMARTHOME_AUTH_BD_USER: ${MYSQL_AUTH_USER}
      SMARTHOME_AUTH_BD_PASSWORD: ${MYSQL_AUTH_PASSWORD}
      EMAIL_TOPIK: ${EMAIL_TOPIK}
      EMAIL_QUEUE: ${EMAIL_QUEUE}
      RABITMQ_HOST: ${RABITMQ_HOST}
      RABITMQ_PORT: ${RABITMQ_PORT}
    ports:
      - 5600:8004
    expose:
      - 8004
    volumes:
      - ./SmartHomeAuth:/home/auth_service/web
      - media_voluem:/home/auth_service/web/media
    depends_on:
      rabbitmq:
        condition: service_healthy
      sh_auth_db:
        condition: service_started
  email_service:
    build: ./EmailService
    restart: always
    command: bash -c "uvicorn app:create_app --reload --port=8005 --host='0.0.0.0'"
    ports:
      - 1234:8005
    depends_on:
      rabbitmq:
        condition: service_healthy
    expose:
      - 8005
    environment:
      EMAIL_TOPIK: ${EMAIL_TOPIK}
      EMAIL_QUEUE: ${EMAIL_QUEUE}
      RABITMQ_HOST: ${RABITMQ_HOST}
      RABITMQ_PORT: ${RABITMQ_PORT}
    volumes:
      - ./EmailService:/home/email_service/web
      - media_voluem:/home/email_service/web/media
  device_service:
    build: ./SmartHome
    restart: always
    command: bash -c "uvicorn app:create_app --reload --port=8006 --host='0.0.0.0'"
    ports:
      - 1235:8006
    depends_on:
      rabbitmq:
        condition: service_healthy
    expose:
      - 8006
    environment:
      EMAIL_TOPIK: ${EMAIL_TOPIK}
      EMAIL_QUEUE: ${EMAIL_QUEUE}
      RABITMQ_HOST: ${RABITMQ_HOST}
      RABITMQ_PORT: ${RABITMQ_PORT}
      SMARTHOME_BD_HOST: ${SMARTHOME_BD_HOST}
      SMARTHOME_BD_PORT: ${SMARTHOME_BD_PORT}
      SMARTHOME_BD_NAME: ${MYSQL_DATABASE}
      SMARTHOME_BD_USER: ${MYSQL_USER}
      SMARTHOME_BD_PASSWORD: ${MYSQL_PASSWORD}
    volumes:
      - ./SmartHome:/home/device_service/web
      - media_device_voluem:/home/device_service/web/media
  nginx:
    build: ./testNginx
    ports:
      - 1337:80
    depends_on:
      - auth_service
      - email_service
      - device_service
      # - client
    volumes:
      - media_voluem:/home/smart_home/web/media/auth
      - media_device_voluem:/home/smart_home/web/media/device
      - client_voluem:/client/build
  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    healthcheck:
      test: rabbitmq-diagnostics check_port_connectivity
      interval: 15s
      timeout: 15s
      retries: 3
    ports:
      - ${RABITMQ_PORT}:15672
  phpmyadmin:
    image: phpmyadmin
    restart: always
    ports:
      - 8088:80
    environment:
      - PMA_ARBITRARY=1
  mosquitto:
    container_name: mosquitto
    build:
      context: ./mosquitto
      dockerfile: Dockerfile
      args:
        MOSQUITTO_USER: ${MOSQUITTO_USER}
        MOSQUITTO_PASSWD: ${MOSQUITTO_PASSWD}
    restart: always
    volumes:
      - ./mosquitto/config/mosquitto.conf:/mosquitto/config/mosquitto.conf
      - ./mosquitto/data:/mosquitto/data
      - ./mosquitto/log:/mosquitto/log
    ports:
      - 1884:1883
    environment:
      MQTT_BROKER_URL: mqtt://mosquitto
  zigbee2mqtt:
    container_name: zigbee2mqtt
    image: koenkk/zigbee2mqtt
    restart: unless-stopped
    volumes:
      - ./zigbee2mqtt:/app/data
      - /run/udev:/run/udev:ro
    ports:
        # Frontend port
      - 8081:8080
    environment:
      - TZ=Europe/Moscow
    privileged: true
    depends_on:
      mosquitto:
        condition: service_started

  # client:
  #   build:
  #     context: ./frontend/client_base
  #     dockerfile: Dockerfile
  #     args:
  #       REACT_APP_WS_HOST: ${HOST}
  #   volumes:
  #     - client_voluem:/client/build
volumes:
  media_voluem:
  media_device_voluem:
  client_voluem:
  bd_auth_data:
  bd_data:
